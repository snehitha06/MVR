[{"/Users/ardasatata/Desktop/baw2/build-a-website-2/src/App.js":"1","/Users/ardasatata/Desktop/baw2/build-a-website-2/src/containers/Details.js":"2","/Users/ardasatata/Desktop/baw2/build-a-website-2/src/index.js":"3","/Users/ardasatata/Desktop/baw2/build-a-website-2/src/containers/Home.js":"4","/Users/ardasatata/Desktop/baw2/build-a-website-2/src/components/City.js":"5","/Users/ardasatata/Desktop/baw2/build-a-website-2/src/components/WeatherImage.js":"6"},{"size":479,"mtime":1609396122367,"results":"7","hashOfConfig":"8"},{"size":2709,"mtime":1609472530541,"results":"9","hashOfConfig":"8"},{"size":251,"mtime":1609411130726,"results":"10","hashOfConfig":"8"},{"size":2409,"mtime":1609472721466,"results":"11","hashOfConfig":"8"},{"size":703,"mtime":1609468658649,"results":"12","hashOfConfig":"8"},{"size":890,"mtime":1609472317776,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nw3wnv",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ardasatata/Desktop/baw2/build-a-website-2/src/App.js",[],"/Users/ardasatata/Desktop/baw2/build-a-website-2/src/containers/Details.js",[],"/Users/ardasatata/Desktop/baw2/build-a-website-2/src/index.js",[],["28","29"],"/Users/ardasatata/Desktop/baw2/build-a-website-2/src/containers/Home.js",["30"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport City from \"../components/City\";\n\nfunction Home() {\n  const [cities, setCities] = useState([\n    {\n      name: \"Jakarta\",\n      currentTemp: \"0\",\n      weatherType: \"\",\n      color: \"bg-yellow-500\",\n    },\n    {\n      name: \"Bandung\",\n      currentTemp: \"0\",\n      weatherType: \"\",\n      color: \"bg-red-500\",\n    },\n    {\n      name: \"Malang\",\n      currentTemp: \"0\",\n      weatherType: \"\",\n      color: \"bg-blue-500\",\n    },\n    {\n      name: \"Taoyuan\",\n      currentTemp: \"0\",\n      weatherType: \"\",\n      color: \"bg-blue-500\",\n    },\n    // {\n    //   name: \"New York\",\n    //   currentTemp: \"0\",\n    //   weatherType: \"\",\n    //   color: \"bg-blue-500\",\n    // },\n    // {\n    //   name: \"Tokyo\",\n    //   currentTemp: \"0\",\n    //   weatherType: \"\",\n    //   color: \"bg-blue-500\",\n    // },\n  ]);\n\n  useEffect(() => {\n    updateAllWeatherData();\n  }, []);\n\n  // Fetch the weather data for 1 city\n  async function fetchWeatherData(cityName) {\n    const res = await axios\n      .get(\n        `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&units=metric&appid=${process.env.REACT_APP_WEATHER_KEY}`\n      )\n      .then(function (response) {\n        // Successful request\n        const weather = response.data;\n        return weather;\n      })\n      .catch(function (error) {\n        // The best practice of coding is to not use console.log\n        console.warn(error);\n      });\n\n    return res;\n  }\n\n  // update the list data\n  async function updateAllWeatherData(params) {\n    cities.forEach(function (citiesItems, index) {\n      let weatherData = {};\n      let newCities = [...cities];\n\n      fetchWeatherData(citiesItems.name).then((res) => {\n        weatherData = res;\n\n        newCities[index].currentTemp = weatherData.main.temp;\n        newCities[index].weatherType = weatherData.weather[0].main;\n        setCities(newCities);\n      });\n    });\n  }\n\n  return (\n    // Container\n    <div className=\"flex flex-col h-screen bg-green-100\">\n      <div className=\"text-4xl text-yellow-500 font-semibold text-center my-4\">\n        Our Weather App\n      </div>\n\n      {cities.map((item, index) => (\n        <City\n          cityName={item.name}\n          weatherType={item.weatherType}\n          temp={item.currentTemp}\n          color={item.color}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default Home;\n","/Users/ardasatata/Desktop/baw2/build-a-website-2/src/components/City.js",[],"/Users/ardasatata/Desktop/baw2/build-a-website-2/src/components/WeatherImage.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":48,"column":6,"nodeType":"37","endLine":48,"endColumn":8,"suggestions":"38"},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateAllWeatherData'. Either include it or remove the dependency array.","ArrayExpression",["41"],"no-global-assign","no-unsafe-negation",{"desc":"42","fix":"43"},"Update the dependencies array to be: [updateAllWeatherData]",{"range":"44","text":"45"},[940,942],"[updateAllWeatherData]"]